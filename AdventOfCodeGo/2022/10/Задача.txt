--- День 10: Электронно-лучевая трубка ---
    Вы избегаете веревок, ныряете в реку и плывете к берегу.
    Эльфы кричат что-то о встрече с ними вверх по реке, но река слишком громкая, чтобы точно сказать, что они говорят.
Они заканчивают переходить мост и исчезают из поля зрения.
    Вероятно, именно в таких ситуациях эльфы уделяют первоочередное внимание обеспечению работоспособности системы связи
на вашем портативном устройстве. Вы вытаскиваете его из рюкзака, но количество воды, медленно вытекающей из большой
трещины в его сетке, говорит вам, что, вероятно, в ближайшем будущем от него не будет особой пользы.
    Разве что можно сконструировать замену видеосистеме устройства! Похоже, это что-то вроде экрана с электронно-лучевой
трубкой и простого процессора, которые оба управляются точной тактовой схемой. Схема часов тикает с постоянной скоростью;
каждый тик называется циклом.
    Начните с выяснения сигнала, отправляемого процессором. ЦП имеет единственный регистр X, который начинается со значения 1.
Он поддерживает только две инструкции:
        Для завершения addx V требуется два цикла. После двух циклов регистр X увеличивается на значение V.
(V может быть отрицательным.)
        noop занимает один цикл. Другого эффекта это не имеет.
    ЦП использует эти инструкции в программе (введенные вами данные головоломки), чтобы каким-то образом сообщить экрану,
что рисовать.
    Рассмотрим следующую небольшую программу:
noop
addx 3
addx -5
    Выполнение этой программы происходит следующим образом:
        В начале первого цикла начинается выполнение инструкции noop. В течение первого цикла X равен 1. После первого
цикла инструкция noop завершает выполнение, ничего не делая.
        В начале второго цикла начинает выполнение инструкция addx 3. Во время второго цикла X все еще равен 1.
        В течение третьего цикла X по-прежнему равен 1. После третьего цикла инструкция addx 3 завершает выполнение,
устанавливая X в значение 4.
        В начале четвертого цикла начинает выполнение инструкция addx -5. Во время четвертого цикла X все еще равен 4.
        Во время пятого цикла X по-прежнему равен 4. После пятого цикла инструкция addx -5 завершает выполнение,
устанавливая X в -1.
    Возможно, вы сможете чему-то научиться, наблюдая за значением регистра X во время выполнения. А пока рассмотрим
силу сигнала (номер цикла, умноженный на значение регистра X) в течение 20-го цикла и каждые 40 циклов после этого
(то есть в течение 20-го, 60-го, 100-го, 140-го, 180-го и 220-го циклов). .
    Например, рассмотрим эту более крупную программу:
addx 15
addx -11
addx 6
addx -3
addx 5
addx -1
addx -8
addx 13
addx 4
noop
addx -1
addx 5
addx -1
addx 5
addx -1
addx 5
addx -1
addx 5
addx -1
addx -35
addx 1
addx 24
addx -19
addx 1
addx 16
addx -11
noop
noop
addx 21
addx -15
noop
noop
addx -3
addx 9
addx 1
addx -3
addx 8
addx 1
addx 5
noop
noop
noop
noop
noop
addx -36
noop
addx 1
addx 7
noop
noop
noop
addx 2
addx 6
noop
noop
noop
noop
noop
addx 1
noop
noop
addx 7
addx 1
noop
addx -13
addx 13
addx 7
noop
addx 1
addx -33
noop
noop
noop
addx 2
noop
noop
noop
addx 8
noop
addx -1
addx 2
addx 1
noop
addx 17
addx -9
addx 1
addx 1
addx -3
addx 11
noop
noop
addx 1
noop
addx 1
noop
noop
addx -13
addx -19
addx 1
addx 3
addx 26
addx -30
addx 12
addx -1
addx 3
addx 1
noop
noop
noop
addx -9
addx 18
addx 1
addx 2
noop
noop
addx 9
noop
noop
noop
addx -1
addx 2
addx -37
addx 1
addx 3
noop
addx 15
addx -21
addx 22
addx -6
addx 1
noop
addx 2
addx 1
noop
addx -10
noop
noop
addx 20
addx 1
addx 2
addx 2
addx -6
addx -11
noop
noop
noop
    Интересные уровни сигнала можно определить следующим образом:
        Во время 20-го цикла регистр X имеет значение 21, поэтому уровень сигнала равен 20 * 21 = 420.
(20-й цикл происходит в середине второго addx -1, поэтому значение регистра X является начальным значением, 1. ,
плюс все остальные значения addx до этого момента: 1 + 15 – 11 + 6 – 3 + 5 – 1 – 8 + 13 + 4 = 21.)
        Во время 60-го цикла регистр X имеет значение 19, поэтому уровень сигнала равен 60 * 19 = 1140.
        Во время 100-го цикла регистр X имеет значение 18, поэтому уровень сигнала равен 100 * 18 = 1800.
        Во время 140-го цикла регистр X имеет значение 21, поэтому уровень сигнала равен 140 * 21 = 2940.
        Во время 180-го цикла регистр X имеет значение 16, поэтому уровень сигнала равен 180 * 16 = 2880.
        Во время 220-го цикла регистр X имеет значение 18, поэтому уровень сигнала равен 220 * 18 = 3960.
    Сумма этих сил сигнала равна 13140.
    Найдите силу сигнала в течение 20-го, 60-го, 100-го, 140-го, 180-го и 220-го циклов.
Какова сумма этих шести уровней сигнала?
--- Часть вторая ---
    Похоже, что регистр X управляет горизонтальным положением спрайта. В частности, спрайт имеет ширину 3 пикселя,
а регистр X устанавливает горизонтальное положение середины этого спрайта. (В этой системе не существует такого понятия,
как «вертикальное положение»: если горизонтальное положение спрайта помещает его пиксели туда, где в данный момент рисует
ЭЛТ, то эти пиксели будут отрисованы.)
    Вы считаете количество пикселей на ЭЛТ: 40 в ширину и 6 в высоту. На этом ЭЛТ-экране слева направо рисуется верхний
ряд пикселей, затем ряд ниже и так далее. Самый левый пиксель в каждой строке находится в позиции 0, а самый правый
пиксель в каждой строке — в позиции 39.
    Как и ЦП, ЭЛТ тесно связана с тактовой схемой: ЭЛТ рисует один пиксель в течение каждого цикла. Обозначая каждый
пиксель экрана знаком #, можно увидеть циклы, в течение которых отрисовываются первый и последний пиксель в каждой строке:
Cycle   1 -> ######################################## <- Cycle  40
Cycle  41 -> ######################################## <- Cycle  80
Cycle  81 -> ######################################## <- Cycle 120
Cycle 121 -> ######################################## <- Cycle 160
Cycle 161 -> ######################################## <- Cycle 200
Cycle 201 -> ######################################## <- Cycle 240
    Таким образом, тщательно синхронизируя инструкции ЦП и операции рисования ЭЛТ, вы сможете определить, виден ли
спрайт в момент рисования каждого пикселя. Если спрайт расположен так, что один из трех его пикселей является рисуемым
в данный момент пикселем, на экране появляется светящийся пиксель (#); в противном случае экран оставляет пиксель темным (.).
    Первые несколько пикселей из более крупного примера выше рисуются следующим образом:
Позиция спрайта: ###.............................

Запустить цикл 1: начать выполнение addx 15.
Во время цикла 1: CRT рисует пиксель в позиции 0.
Текущая строка CRT: #

Во время цикла 2: CRT рисует пиксель в позиции 1.
Текущая строка CRT: ##
Конец цикла 2: завершить выполнение addx 15 (регистр X теперь равен 16)
Позиция спрайта: ................###......................

Запуск цикла 3: начните выполнение addx -11.
Во время цикла 3: CRT рисует пиксель в позиции 2.
Текущая строка CRT: ##.

Во время цикла 4: CRT рисует пиксель в позиции 3.
Текущая строка CRT: ##..
Конец цикла 4: завершить выполнение addx -11 (регистр X теперь равен 5)
Позиция спрайта: ....###............................

Начать цикл 5: начать выполнение addx 6.
Во время цикла 5: CRT рисует пиксель в позиции 4.
Текущая строка CRT: ##..#

Во время цикла 6: CRT рисует пиксель в позиции 5.
Текущая строка CRT: ##..##
Конец цикла 6: завершить выполнение addx 6 (регистр X теперь равен 11)
Позиция спрайта: ..........###............................

Начать цикл 7: начать выполнение addx -3
Во время цикла 7: CRT рисует пиксель в позиции 6.
Текущая строка CRT: ##..##.

Во время цикла 8: CRT рисует пиксель в позиции 7.
Текущая строка CRT: ##..##..
Конец цикла 8: завершить выполнение addx -3 (регистр X теперь равен 8)
Позиция спрайта: .......###............................

Начать цикл 9: начать выполнение addx 5.
Во время цикла 9: CRT рисует пиксель в позиции 8.
Текущая строка CRT: ##..##..#

Во время цикла 10: CRT рисует пиксель в позиции 9.
Текущая строка CRT: ##..##..##
Конец цикла 10: завершить выполнение addx 5 (регистр X теперь равен 13)
Позиция спрайта: ............###............

Запуск цикла 11: начните выполнение addx -1.
Во время цикла 11: CRT рисует пиксель в позиции 10.
Текущая строка CRT: ##..##..##.

Во время цикла 12: CRT рисует пиксель в позиции 11.
Текущая строка CRT: ##..##..##..
Конец цикла 12: завершить выполнение addx -1 (регистр X теперь равен 12)
Позиция спрайта: ...........###........................

Запуск цикла 13: начните выполнение addx -8.
Во время цикла 13: CRT рисует пиксель в позиции 12.
Текущая строка CRT: ##..##..##..#

Во время цикла 14: CRT рисует пиксель в позиции 13.
Текущая строка CRT: ##..##..##..##
Конец цикла 14: завершить выполнение addx -8 (регистр X теперь равен 4)
Позиция спрайта: ...###............................

Начать цикл 15: начать выполнение addx 13.
Во время цикла 15: CRT рисует пиксель в позиции 14.
Текущая строка CRT: ##..##..##..##.

Во время цикла 16: CRT рисует пиксель в позиции 15.
Текущая строка CRT: ##..##..##..##..
Конец цикла 16: завершить выполнение addx 13 (регистр X теперь равен 17)
Позиция спрайта: ................###............................

Начать цикл 17: начать выполнение addx 4.
Во время цикла 17: CRT рисует пиксель в позиции 16.
Текущая строка CRT: ##..##..##..##..#

Во время цикла 18: CRT рисует пиксель в позиции 17.
Текущая строка CRT: ##..##..##..##..##
Конец цикла 18: завершить выполнение addx 4 (регистр X теперь равен 21)
Позиция спрайта: .................###...........

Начать цикл 19: начать выполнение noop
Во время цикла 19: CRT рисует пиксель в позиции 18.
Текущая строка CRT: ##..##..##..##..##.
Конец цикла 19: завершить выполнение noop.

Начать цикл 20: начать выполнение addx -1.
Во время цикла 20: CRT рисует пиксель в позиции 19.
Текущая строка CRT: ##..##..##..##..##..

Во время цикла 21: CRT рисует пиксель в позиции 20.
Текущая строка CRT: ##..##..##..##..##..#
Конец цикла 21: завершить выполнение addx -1 (регистр X теперь равен 20)
Позиция спрайта: ...................###...............

    Если разрешить программе завершить работу, CRT создаст следующее изображение:
##..##..##..##..##..##..##..##..##..##..
###...###...###...###...###...###...###.
####....####....####....####....####....
#####.....#####.....#####.....#####.....
######......######......######......####
#######.......#######.......#######.....
    Отобразите изображение, предоставленное вашей программой. Какие восемь заглавных букв изображены на вашем ЭЛТ?