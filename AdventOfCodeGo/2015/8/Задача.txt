--- День 8: Спички ---
    В этом году место на санях ограничено, поэтому Санта привезет свой список в виде цифровой копии.
Ему нужно знать, сколько места он займет при хранении.
    Во многих языках программирования принято предоставлять способ экранирования специальных символов в строках.
Например, C, JavaScript, Perl, Python и даже PHP обрабатывают специальные символы очень похожим образом.
    Однако важно понимать разницу между количеством символов в кодовом представлении строкового литерала и
количеством символов в самой строке в памяти.

Например:
    "" — 2 символы кода (две двойные кавычки), но строка не содержит ни одного символа.
    "abc" — это не 5 символа, а 3 символа в строке.
    "aaa\"aaa" — 10 символов, но сама строка содержит 6 символов «a» и один символ экранированной кавычки,
что в общей сложности составляет 7 символов в строке.
    "\x27" — 6 символов, но сама строка содержит только один — апостроф ('), экранированный с помощью
шестнадцатеричной записи.

    Список Санты — это файл, содержащий множество строковых литералов в двойных кавычках, по одному на каждой строке.
Единственными используемыми управляющими последовательностями являются \\(которая представляет собой один обратный слеш),
\"(которая представляет собой одиночный символ двойной кавычки) и \x плюс два шестнадцатеричных символа
(которая представляет собой один символ с этим кодом ASCII).

    Не принимая во внимание пробелы в файле, каково количество символов кода для строковых литералов за вычетом
количества символов в памяти для значений строк в целом для всего файла?

    Например, если учесть четыре строки выше, общее количество символов кода строки (2 + 5 + 10 + 6 = 23)
за вычетом общего количества символов в памяти для значений строк (0 + 3 + 7 + 1 = 11) равно 23 - 11 = 12.

--- Часть вторая ---
    Теперь пойдем другим путем. В дополнение к поиску количества символов кода, теперь вы должны закодировать
каждое представление кода как новую строку и найти количество символов нового закодированного представления,
включая окружающие двойные кавычки.

Например:

""кодирует в "\"\"", увеличение с 2 символов до 6.
"abc" кодирует в "\"abc\"", увеличение с 5 символов до 9.
"aaa\"aaa"кодирует в "\"aaa\\\"aaa\"", увеличение с 10 символов до 16.
"\x27" кодирует в "\"\\x27\"", увеличение с 6 символов до 11.

    Ваша задача — найти общее количество символов для представления новых закодированных строк
за вычетом количества символов кода в каждом исходном строковом литерале. Например, для строк выше общая
закодированная длина (6 + 9 + 16 + 11 = 42) за вычетом символов в исходном кодовом представлении
(23, как и в первой части этой головоломки) составляет 42 - 23 = 19.