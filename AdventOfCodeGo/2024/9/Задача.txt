--- День 9: Фрагментатор диска ---
    Ещё одно нажатие кнопки — и вы оказываетесь в знакомых коридорах дружелюбных амфипод! Хорошо, что у каждого из вас
каким-то образом появилась собственная мини-подводная лодка. Историки отправляются на поиски Вождя, в основном врезаясь в стены.
    Пока Историки быстро разбираются, как управлять этими штуками, вы замечаете в углу бокоплава, который пытается справиться
со своим компьютером. Он пытается освободить больше свободного пространства, сжимая все файлы, но его программа не работает;
вы предлагаете свою помощь.
    Он показывает вам карту диска (ваши входные данные для головоломки), которую он уже сгенерировал. Например:
2333133121414131402

    Карта диска использует плотный формат для представления расположения файлов и свободного пространства на диске.
Цифры попеременно указывают длину файла и объём свободного пространства.
    Таким образом, карта диска, подобная 12345, будет представлять файл из одного блока, два блока свободного пространства,
файл из трёх блоков, четыре блока свободного пространства и файл из пяти блоков. Карта диска, подобная 90909, будет представлять
три файла по девять блоков подряд (без свободного пространства между ними).
    Каждый файл на диске также имеет идентификационный номер, основанный на порядке расположения файлов до их переупорядочивания,
начиная с ID 0. Таким образом, карта диска 12345 содержит три файла: файл из одного блока с ID 0, файл из трёх блоков с ID 1
и файл из пяти блоков с ID 2. Используя один символ для каждого блока, где цифры — идентификатор файла, а точка — свободное пространство,
карта диска 12345 представляет эти отдельные блоки:
0..111....22222

    Первый пример выше, 2333133121414131402 представляет собой эти отдельные блоки:
00...111...2...333.44.5555.6666.777.888899

    Амфипод хочет перемещать блоки файлов по одному с конца диска к самому левому свободному блоку
(пока не останется пустых мест между блоками файлов). Для карты диска 12345 процесс выглядит следующим образом:
0..111....22222
02.111....2222.
022111....222..
0221112...22...
02211122..2....
022111222......

Первый пример требует еще несколько шагов:
00...111...2...333.44.5555.6666.777.888899
009..111...2...333.44.5555.6666.777.88889.
0099.111...2...333.44.5555.6666.777.8888..
00998111...2...333.44.5555.6666.777.888...
009981118..2...333.44.5555.6666.777.88....
0099811188.2...333.44.5555.6666.777.8.....
009981118882...333.44.5555.6666.777.......
0099811188827..333.44.5555.6666.77........
00998111888277.333.44.5555.6666.7.........
009981118882777333.44.5555.6666...........
009981118882777333644.5555.666............
00998111888277733364465555.66.............
0099811188827773336446555566..............

    Заключительным этапом процесса сжатия файлов является обновление контрольной суммы файловой системы.
Для её вычисления сложите результат умножения позиции каждого из этих блоков на идентификатор файла, который он содержит.
Крайний левый блок находится в позиции 0. Если блок содержит свободное место, пропустите его.
    Продолжая первый пример, позиции первых нескольких блоков, умноженные на их идентификационный номер файла равны
 0 * 0 = 0, 1 * 0 = 0, 2 * 9 = 18, 3 * 9 = 27, 4 * 8 = 32, и т. д.
 В этом примере контрольная сумма представляет собой сумму этих значений: 1928.

    Упакуйте жёсткий диск амфипода, используя указанную процедуру. Какова будет итоговая контрольная сумма файловой системы?
(Будьте осторожны при копировании и вставке входных данных для этой головоломки: это одна очень длинная строка.)

--- Часть вторая ---
    После завершения сразу становятся очевидны две вещи. Во-первых, на диске определённо стало гораздо больше непрерывного
свободного пространства, как и надеялся бокоплав. Во-вторых, компьютер стал работать гораздо медленнее! Может быть,
фрагментация файловой системы была плохой идеей?
    У предприимчивого бокоплава уже есть новый план: вместо того, чтобы перемещать отдельные блоки, он хотел бы попробовать
уплотнить файлы на своем диске, перемещая целые файлы.
    На этот раз попытайтесь переместить файлы целиком в самый левый диапазон свободного пространства, в котором может поместиться файл.
Попытайтесь переместить каждый файл ровно один раз в порядке убывания его идентификатора, начиная с файла с наибольшим идентификатором.
Если слева от файла нет достаточного для его размещения свободного пространства, файл не будет перемещен.
    Первый пример из предыдущего теперь будет выглядеть иначе:
00...111...2...333.44.5555.6666.777.888899
0099.111...2...333.44.5555.6666.777.8888..
0099.1117772...333.44.5555.6666.....8888..
0099.111777244.333....5555.6666.....8888..
00992111777.44.333....5555.6666.....8888..

    Процесс обновления контрольной суммы файловой системы тот же самый; теперь контрольная сумма этого примера будет 2858.
Начнём заново, теперь уже сжимая жёсткий диск амфипода этим новым методом. Какова будет итоговая контрольная сумма файловой системы?